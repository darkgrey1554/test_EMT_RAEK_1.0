/// --- инициализация работы  с шлюзом --- /// 

для инициализации обмена данных необходимо выполнить функцию 
DWORD InitSharedMemory();
данную функцию необходимо выполнить до использования остальных функций
функция возвращает значение "0" в успешном случаи инициализации 
в случаи ошибки возвращается значение кода ошибки соответствующий кодам ошибок в Windows


/// --- чтение данных получаемых от РАЭК --- ///

для чтения данных полученных от РАЭК используется функция
DWORD read_alldata_from_raek(int *buf_emt_discrete, float* buf_emt_analog);

buf_emt_discrete - указатель на буфер дискретный сигналов
buf_emt_analog - указатель на буфер аналоговых сигналов

по завершению в массивах buf_emt_discrete, buf_emt_analog будут храниться соответствующие данные 
полученные от РАЭК 
массивы должны быть заранее инициализированы на размер согласно установленным константам определенных 
в файле sharedmemory.h:
EMT_FROM_RAEK_ANALOG - размер массива аналоговых значений всех стоек, принимаемых от РАЭК
EMT_FROM_RAEK_DISCRETE - размер массива дискретных значений всех стоек, принимаемых от РАЭК 

функция возвращает значение "0" в успешном случаи выполненя 
в случаи ошибки возвращается значение кода ошибки соответствующий кодам ошибок в Windows


/// --- запись данных в РАЭК --- ///

для записи данных в РАЭК используется функция
DWORD write_alldata_to_raek(int* buf_emt_discrete, float* buf_emt_analog);

buf_emt_discrete - указатель на буфер дискретный сигналов
buf_emt_analog - указатель на буфер аналоговых сигналов

по завершению функции данные из массивов buf_emt_discrete, buf_emt_analog буду переданы РАЭК
массивы должны быть инициализированы размерами согласно константам, в файле sharedmemory.h:
EMT_TO_RAEK_ANALOG - размер массива аналоговых значений всех стоек, передаваемых в РАЭК
EMT_TO_RAEK_DISCRETE - размер массива дискретных значений всех стоек, передаваемых в РАЭК

функция возвращает значение "0" в успешном случаи чтения данных
в случаи ошибки возвращается значение кода ошибки соответствующий кодам ошибок в Windows